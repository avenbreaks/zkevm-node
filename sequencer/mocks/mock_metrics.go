// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	prometheus "github.com/prometheus/client_golang/prometheus"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MetricsMock is an autogenerated mock type for the metricsInterface type
type MetricsMock struct {
	mock.Mock
}

// CounterAdd provides a mock function with given fields: name, value
func (_m *MetricsMock) CounterAdd(name string, value float64) {
	_m.Called(name, value)
}

// HistogramObserve provides a mock function with given fields: name, start
func (_m *MetricsMock) HistogramObserve(name string, start time.Time) {
	_m.Called(name, start)
}

// RegisterCounters provides a mock function with given fields: opts
func (_m *MetricsMock) RegisterCounters(opts ...prometheus.CounterOpts) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// RegisterHistograms provides a mock function with given fields: opts
func (_m *MetricsMock) RegisterHistograms(opts ...prometheus.HistogramOpts) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

type mockConstructorTestingTNewMetricsMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewMetricsMock creates a new instance of MetricsMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMetricsMock(t mockConstructorTestingTNewMetricsMock) *MetricsMock {
	mock := &MetricsMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
